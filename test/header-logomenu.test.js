import { html, fixture, expect } from '@open-wc/testing';

import '../header-logomenu.js';

// Generated by CodiumAI

describe('HeaderLogomenu', () => {

  // Tests that the component renders with default values
  it('should render with default values', async () => {
      const el = await fixture(html`<header-logomenu></header-logomenu>`);
      expect(el.logo).to.equal('about:blank');
      expect(el.logoUrl).to.equal('about:blank');
      expect(el.fillArrowColor).to.equal('#000000');
  });

  // Tests that the component renders with custom values
  it('should render with custom values', async () => {
      const el = await fixture(html`<header-logomenu logo="custom-logo.png" logo-url="https://example.com"></header-logomenu>`);
      expect(el.logo).to.equal('custom-logo.png');
      expect(el.logoUrl).to.equal('https://example.com');
  });

  // Tests that clicking on a button expands a submenu
  it('should expand a submenu when a button is clicked', async () => {
      const el = await fixture(html`<header-logomenu>
          <ul>
              <li id="menu-item">
                  <button>Menu Item</button>
                  <ul>
                      <li><a href="#submenuItem">Submenu Item</a></li>
                  </ul>
              </li>
          </ul>
      </header-logomenu>`);
      const button = el.shadowRoot.querySelector('#menu-item button');
      button.click();
      expect(button.getAttribute('aria-expanded')).to.equal('true');
  });

  // Tests that clicking on a button collapses a submenu
  it('should collapse a submenu when a button is clicked', async () => {
      const el = await fixture(html`<header-logomenu>
          <ul>
              <li id="menu-item">
                  <button>Menu Item</button>
                  <ul>
                      <li><a href="#submenuItem">Submenu Item</a></li>
                  </ul>
              </li>
          </ul>
      </header-logomenu>`);
      const button = el.shadowRoot.querySelector('#menu-item button');
      button.click();
      button.click();
      expect(button.getAttribute('aria-expanded')).to.equal('false');
  });

  // Tests that clicking on a link outside the menu closes all submenus
  it('should close all submenus when a link outside the menu is clicked', async () => {
      const el = await fixture(html`<header-logomenu>
          <ul>
              <li id="menu-item">
                  <button>Menu Item</button>
                  <ul>
                      <li><a href="#submenuItem">Submenu Item</a></li>
                  </ul>
              </li>
          </ul>
      </header-logomenu>`);
      const button = el.shadowRoot.querySelector('#menu-item button');
      button.click();
      const link = el.shadowRoot.querySelector('ul > li > a');
      link.click();
      expect(button.getAttribute('aria-expanded')).to.equal('false');
  });
});
